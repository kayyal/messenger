/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.sql.*;

import static java.lang.System.out;

/**
 *
 * @author Amir
 */
public class ClientGUI2 extends javax.swing.JFrame {



    public String name;
    private String port;
    private Socket socket;
    public String mmmm;

    // constructor
    public  ClientGUI2(Socket socket) {
        this.socket = socket;
        initComponents();
        this.messageHandler();
        setVisible(true);
        this.name = name;


    }

    public   ClientGUI2(String name, String port) {
        this.name = name;
        this.port = port;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public  void setName(String name) {
        this.name = name;
    }


    public String getPort() {
        return port;
    }

    public void setPort(String port) {
        this.port = port;
    }

    public ClientGUI2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();


        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send");

        jButton2.setText("Profile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("LastSeen");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton4.setText("Online users");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               // jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)

                ))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addComponent(jButton4)
                    ))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1,40,40,40))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>



    public void test() throws IOException {
        DataOutputStream output = new DataOutputStream(socket.getOutputStream());
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/massanger_db", "root", "");

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from chat ");
            while (rs.next()) {
                if (rs.getString(1).equals(mmmm)) {
                    String s = rs.getString(2);

                    if (s != null) {
                        output.writeUTF(s);


                    }
                }


            }
        }catch (SQLException e) {
            e.printStackTrace();

        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }



    }
    public void   buttonAction(DataOutputStream output) {


        this.jButton1.addActionListener(e -> {

            try {
                String  message = jTextField1.getText();
                jTextField1.setText("");
                String [] splitMessage = message.split("#");
                jTextArea1.append("\nI said: " + splitMessage[1]);
                insert(splitMessage[1]);
                sendMessage(output,message);
            } catch (IOException | ArrayIndexOutOfBoundsException ex) {
                jTextArea1.append("\nMessage format wrong" + "\nYour message format look like this--> user#your message");

            }

        });
        this.jButton2.addActionListener(e -> {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/massanger_db", "root", "");

                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from users ");
                while (rs.next()) {
                    if (rs.getString(2).equals(name)) {
                        String s = rs.getString(5);
                        Profile pro=new Profile(new javax.swing.JFrame(), true,name,s);
                        pro.initcom();


                    }


                }


            } catch (SQLException e2) {
                e2.printStackTrace();
            } catch (ClassNotFoundException e3) {
                e3.printStackTrace();
            }
        });
        this.jButton3.addActionListener(e -> {
            LastSeenList last=new LastSeenList();
            //last.initcom();
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/massanger_db", "root", "");

                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery("select * from users ");


                while (rs.next()) {

                    if (!rs.getString(2).equals(name))
                        last.jTextAreaLastSeenList.append("\n"+rs.getString(2)+"\t"+rs.getString(4));


                }




            } catch (SQLException e1) {
                e1.printStackTrace();

            } catch (ClassNotFoundException e2) {
                e2.printStackTrace();

            }
        });
        this.jButton4.addActionListener(e -> {
            OnlineUserList online=new OnlineUserList(mmmm);
          //  online.initcom(mmmm);


        });

    }
    public void messageHandler(){

        //you must prevent use try with resources because of used thread
        //if you used try with resources each time socket closed and
        //give a close socket Exception
        try {
            DataInputStream inputStream = new DataInputStream(socket.getInputStream());
            DataOutputStream outputStream = new DataOutputStream(socket.getOutputStream());


            //this thread handel output message
            Thread thread1 = new Thread(() -> {

                buttonAction(outputStream);
                try {
                    test();
                } catch (IOException e) {
                    e.printStackTrace();
                }

            });
            thread1.start();

            //this thread handel input message
            Thread thread = new Thread(() -> {
                try {
                    this.getMessage(inputStream);

                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
            thread.start();
        }catch (IOException e) {
            e.printStackTrace();
        }
    }

    //this method send message to server
    public void sendMessage(DataOutputStream output,String message) throws IOException {



        if(message != null) {
            output.writeUTF(message);


        }
//        }//end of while loop

    }//end of sendMessage method

    public void getMessage(DataInputStream input) throws IOException{

        while (true) {

            String messageIn = input.readUTF();
            if (messageIn.charAt(0)=='['){
                mmmm=messageIn;}
            jTextArea1.append("\n" + messageIn);
        }

    }//end of// get message



    public  void insert (String b) {
        String sql = "INSERT INTO chat(pm,message) VALUES(?,?)";
        try {
            Class.forName("com.mysql.jdbc.Driver");
        }catch (ClassNotFoundException e){
            System.out.println(e.getStackTrace());
        }
        try (Connection con = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/massanger_db", "root", "");

             PreparedStatement pstmt = con.prepareStatement(sql)) {
            pstmt.setString(1, mmmm);
            pstmt.setString(2, b);
            pstmt.execute();



        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

    }


    @Override
    public String toString() {
        return "ClientGUI{" +
                "name='" + name + '\'' +
                ", port='" + port + '\'' +
                '}';
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }
    public void initcom(){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientGUI2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientGUI2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
